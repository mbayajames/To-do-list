{"ast":null,"code":"var _jsxFileName = \"/Users/macbookairm1/To-do-list/src/Components/ToDoList.js\",\n  _s = $RefreshSig$();\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import { Button, Form, ListGroup, Modal } from \"react-bootstrap\";\n// // import \"bootstrap/dist/css/bootstrap.min.css\"; // Correctly import the CSS\n\n// // const App = () => {\n// //   const [tasks, setTasks] = useState([]);\n// //   const [task, setTask] = useState(\"\");\n// //   const [editingTask, setEditingTask] = useState(null);\n\n// //   // Fetch tasks from db.json\n// //   useEffect(() => {\n// //     axios.get(\"http://localhost:4000/tasks\").then((response) => {\n// //       setTasks(response.data);\n// //     });\n// //   }, []);\n\n// //   // Add a new task\n// //   const handleAddTask = (e) => {\n// //     e.preventDefault();\n// //     if (task.trim() !== \"\") {\n// //       const newTask = {\n// //         id: Date.now(),\n// //         text: task,\n// //         date: new Date().toLocaleDateString(),\n// //         time: new Date().toLocaleTimeString(),\n// //       };\n\n// //       axios.post(\"http://localhost:4000/tasks\", newTask).then(() => {\n// //         setTasks([...tasks, newTask]);\n// //         setTask(\"\");\n// //       });\n// //     }\n// //   };\n\n// //   // Delete a task\n// //   const handleDelete = (id) => {\n// //     axios.delete(`http://localhost:4000/tasks/${id}`).then(() => {\n// //       setTasks(tasks.filter((task) => task.id !== id));\n// //     });\n// //   };\n\n// //   // Open editing modal\n// //   const handleEdit = (task) => {\n// //     setEditingTask(task);\n// //   };\n\n// //   // Save the edited task\n// //   const handleSaveEdit = () => {\n// //     axios\n// //       .put(`http://localhost:4000/tasks/${editingTask.id}`, editingTask)\n// //       .then(() => {\n// //         setTasks(\n// //           tasks.map((task) =>\n// //             task.id === editingTask.id ? editingTask : task\n// //           )\n// //         );\n// //         setEditingTask(null);\n// //       });\n// //   };\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h1 className=\"text-center\">To-Do List</h1>\n\n// //       {/* Add Task Form */}\n// //       <Form onSubmit={handleAddTask} className=\"mb-4\">\n// //         <Form.Group controlId=\"taskInput\">\n// //           <Form.Control\n// //             type=\"text\"\n// //             placeholder=\"Enter a new task\"\n// //             value={task}\n// //             onChange={(e) => setTask(e.target.value)}\n// //           />\n// //         </Form.Group>\n// //         <Button type=\"submit\" className=\"mt-2 w-100\" variant=\"primary\">\n// //           Add Task\n// //         </Button>\n// //       </Form>\n\n// //       {/* Task List */}\n// //       <ListGroup>\n// //         {tasks.map((task) => (\n// //           <ListGroup.Item key={task.id} className=\"d-flex justify-content-between align-items-center\">\n// //             <div>\n// //               <strong>{task.text}</strong>\n// //               <br />\n// //               <small>\n// //                 {task.date} - {task.time}\n// //               </small>\n// //             </div>\n// //             <div>\n// //               <Button\n// //                 variant=\"warning\"\n// //                 size=\"sm\"\n// //                 className=\"me-2\"\n// //                 onClick={() => handleEdit(task)}\n// //               >\n// //                 Edit\n// //               </Button>\n// //               <Button\n// //                 variant=\"danger\"\n// //                 size=\"sm\"\n// //                 onClick={() => handleDelete(task.id)}\n// //               >\n// //                 Delete\n// //               </Button>\n// //             </div>\n// //           </ListGroup.Item>\n// //         ))}\n// //       </ListGroup>\n\n// //       {/* Edit Modal */}\n// //       {editingTask && (\n// //         <Modal show onHide={() => setEditingTask(null)}>\n// //           <Modal.Header closeButton>\n// //             <Modal.Title>Edit Task</Modal.Title>\n// //           </Modal.Header>\n// //           <Modal.Body>\n// //             <Form.Group>\n// //               <Form.Label>Task</Form.Label>\n// //               <Form.Control\n// //                 type=\"text\"\n// //                 value={editingTask.text}\n// //                 onChange={(e) =>\n// //                   setEditingTask({ ...editingTask, text: e.target.value })\n// //                 }\n// //               />\n// //             </Form.Group>\n// //           </Modal.Body>\n// //           <Modal.Footer>\n// //             <Button variant=\"secondary\" onClick={() => setEditingTask(null)}>\n// //               Cancel\n// //             </Button>\n// //             <Button variant=\"primary\" onClick={handleSaveEdit}>\n// //               Save Changes\n// //             </Button>\n// //           </Modal.Footer>\n// //         </Modal>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default App;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// // const ToDoList = () => {\n// //   const [tasks, setTasks] = useState([]);\n// //   const [date, setDate] = useState(\"\");\n// //   const [day, setDay] = useState(\"\");\n// //   const [activity, setActivity] = useState(\"\");\n// //   const [status, setStatus] = useState(\"Not Done\");\n// //   const [selectedDate, setSelectedDate] = useState(\"\");\n\n// //   // Fetch tasks from JSON Server\n// //   useEffect(() => {\n// //     axios\n// //       .get(\"http://localhost:4000/tasks\")\n// //       .then((response) => setTasks(response.data))\n// //       .catch((error) => console.error(\"Error fetching tasks:\", error));\n// //   }, []);\n\n// //   // Add a new task\n// //   const handleAddTask = (e) => {\n// //     e.preventDefault();\n\n// //     if (!date || !day || !activity) {\n// //       alert(\"All fields are required!\");\n// //       return;\n// //     }\n\n// //     const newTask = {\n// //       id: Date.now(),\n// //       date,\n// //       day,\n// //       activity,\n// //       status,\n// //     };\n\n// //     axios\n// //       .post(\"http://localhost:4000/tasks\", newTask)\n// //       .then((response) => {\n// //         setTasks([...tasks, response.data]);\n// //         setDate(\"\");\n// //         setDay(\"\");\n// //         setActivity(\"\");\n// //         setStatus(\"Not Done\");\n// //       })\n// //       .catch((error) => console.error(\"Error adding task:\", error));\n// //   };\n\n// //   // Delete a task\n// //   const handleDeleteTask = (id) => {\n// //     axios\n// //       .delete(`http://localhost:4000/tasks/${id}`)\n// //       .then(() => {\n// //         setTasks(tasks.filter((task) => task.id !== id));\n// //       })\n// //       .catch((error) => console.error(\"Error deleting task:\", error));\n// //   };\n\n// //   // Toggle task status\n// //   const handleToggleStatus = (id) => {\n// //     const updatedTasks = tasks.map((task) =>\n// //       task.id === id ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" } : task\n// //     );\n\n// //     const updatedTask = updatedTasks.find((task) => task.id === id);\n\n// //     axios\n// //       .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n// //       .then(() => setTasks(updatedTasks))\n// //       .catch((error) => console.error(\"Error updating status:\", error));\n// //   };\n\n// //   // Filter tasks by selected date\n// //   const filteredTasks = selectedDate\n// //     ? tasks.filter((task) => task.date === selectedDate)\n// //     : tasks;\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h1 className=\"text-center mb-4\">Personal Planner</h1>\n\n// //       {/* Add Task Form */}\n// //       <form onSubmit={handleAddTask} className=\"mb-4\">\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Date</label>\n// //           <input\n// //             type=\"date\"\n// //             className=\"form-control\"\n// //             value={date}\n// //             onChange={(e) => setDate(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Day</label>\n// //           <input\n// //             type=\"text\"\n// //             className=\"form-control\"\n// //             value={day}\n// //             onChange={(e) => setDay(e.target.value)}\n// //             placeholder=\"e.g., Monday\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Activity</label>\n// //           <input\n// //             type=\"text\"\n// //             className=\"form-control\"\n// //             value={activity}\n// //             onChange={(e) => setActivity(e.target.value)}\n// //             placeholder=\"e.g., Morning Run\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Status</label>\n// //           <select\n// //             className=\"form-control\"\n// //             value={status}\n// //             onChange={(e) => setStatus(e.target.value)}\n// //           >\n// //             <option value=\"Not Done\">Not Done</option>\n// //             <option value=\"Done\">Done</option>\n// //           </select>\n// //         </div>\n// //         <button type=\"submit\" className=\"btn btn-primary w-100\">\n// //           Add Task\n// //         </button>\n// //       </form>\n\n// //       {/* Filter by Date */}\n// //       <div className=\"mb-4\">\n// //         <label className=\"form-label\">Filter by Date</label>\n// //         <input\n// //           type=\"date\"\n// //           className=\"form-control\"\n// //           value={selectedDate}\n// //           onChange={(e) => setSelectedDate(e.target.value)}\n// //         />\n// //       </div>\n\n// //       {/* Task List */}\n// //       <h3>Task List</h3>\n// //       {filteredTasks.length > 0 ? (\n// //         <ul className=\"list-group\">\n// //           {filteredTasks.map((task) => (\n// //             <li\n// //               key={task.id}\n// //               className=\"list-group-item d-flex justify-content-between align-items-center\"\n// //             >\n// //               <div>\n// //                 <strong>{task.activity}</strong>\n// //                 <br />\n// //                 <small>\n// //                   {task.day}, {task.date}\n// //                 </small>\n// //                 <br />\n// //                 <span\n// //                   className={`badge ${\n// //                     task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n// //                   }`}\n// //                 >\n// //                   {task.status}\n// //                 </span>\n// //               </div>\n// //               <div>\n// //                 <button\n// //                   className=\"btn btn-sm btn-secondary me-2\"\n// //                   onClick={() => handleToggleStatus(task.id)}\n// //                 >\n// //                   Toggle Status\n// //                 </button>\n// //                 <button\n// //                   className=\"btn btn-sm btn-danger\"\n// //                   onClick={() => handleDeleteTask(task.id)}\n// //                 >\n// //                   Delete\n// //                 </button>\n// //               </div>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       ) : (\n// //         <p className=\"text-muted\">No tasks available for this date.</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default ToDoList;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// // const ToDoList = () => {\n// //   const [tasks, setTasks] = useState([]);\n// //   const [date, setDate] = useState(\"\");\n// //   const [day, setDay] = useState(\"\");\n// //   const [activity, setActivity] = useState(\"\");\n// //   const [status, setStatus] = useState(\"Not Done\");\n// //   const [selectedDate, setSelectedDate] = useState(\"\");\n\n// //   // Fetch tasks from JSON Server\n// //   useEffect(() => {\n// //     axios\n// //       .get(\"http://localhost:4000/tasks\")\n// //       .then((response) => setTasks(response.data))\n// //       .catch((error) => console.error(\"Error fetching tasks:\", error));\n// //   }, []);\n\n// //   // Add a new task\n// //   const handleAddTask = (e) => {\n// //     e.preventDefault();\n\n// //     if (!date || !day || !activity) {\n// //       alert(\"All fields are required!\");\n// //       return;\n// //     }\n\n// //     const newTask = {\n// //       id: Date.now(),\n// //       date,\n// //       day,\n// //       activity,\n// //       status,\n// //     };\n\n// //     axios\n// //       .post(\"http://localhost:4000/tasks\", newTask)\n// //       .then((response) => {\n// //         setTasks([...tasks, response.data]);\n// //         setDate(\"\");\n// //         setDay(\"\");\n// //         setActivity(\"\");\n// //         setStatus(\"Not Done\");\n// //       })\n// //       .catch((error) => console.error(\"Error adding task:\", error));\n// //   };\n\n// //   // Delete a task\n// //   const handleDeleteTask = (id) => {\n// //     axios\n// //       .delete(`http://localhost:4000/tasks/${id}`)\n// //       .then(() => {\n// //         setTasks(tasks.filter((task) => task.id !== id));\n// //       })\n// //       .catch((error) => console.error(\"Error deleting task:\", error));\n// //   };\n\n// //   // Toggle task status\n// //   const handleToggleStatus = (id) => {\n// //     const updatedTasks = tasks.map((task) =>\n// //       task.id === id ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" } : task\n// //     );\n\n// //     const updatedTask = updatedTasks.find((task) => task.id === id);\n\n// //     axios\n// //       .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n// //       .then(() => setTasks(updatedTasks))\n// //       .catch((error) => console.error(\"Error updating status:\", error));\n// //   };\n\n// //   // Filter tasks by selected date\n// //   const filteredTasks = selectedDate\n// //     ? tasks.filter((task) => task.date === selectedDate)\n// //     : tasks;\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <div className=\"card shadow border-0\">\n// //         <div className=\"card-header bg-primary text-white text-center rounded-top\">\n// //           <h1>Personal Planner</h1>\n// //         </div>\n// //         <div className=\"card-body p-4\">\n// //           {/* Add Task Form */}\n// //           <form onSubmit={handleAddTask} className=\"mb-4\">\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Date</label>\n// //               <input\n// //                 type=\"date\"\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={date}\n// //                 onChange={(e) => setDate(e.target.value)}\n// //                 required\n// //               />\n// //             </div>\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Day</label>\n// //               <input\n// //                 type=\"text\"\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={day}\n// //                 onChange={(e) => setDay(e.target.value)}\n// //                 placeholder=\"e.g., Monday\"\n// //                 required\n// //               />\n// //             </div>\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Activity</label>\n// //               <input\n// //                 type=\"text\"\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={activity}\n// //                 onChange={(e) => setActivity(e.target.value)}\n// //                 placeholder=\"e.g., Morning Run\"\n// //                 required\n// //               />\n// //             </div>\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Status</label>\n// //               <select\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={status}\n// //                 onChange={(e) => setStatus(e.target.value)}\n// //               >\n// //                 <option value=\"Not Done\">Not Done</option>\n// //                 <option value=\"Done\">Done</option>\n// //               </select>\n// //             </div>\n// //             <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill shadow\">\n// //               Add Task\n// //             </button>\n// //           </form>\n\n// //           {/* Filter by Date */}\n// //           <div className=\"mb-4\">\n// //             <label className=\"form-label fw-bold\">Filter by Date</label>\n// //             <input\n// //               type=\"date\"\n// //               className=\"form-control rounded-pill shadow-sm\"\n// //               value={selectedDate}\n// //               onChange={(e) => setSelectedDate(e.target.value)}\n// //             />\n// //           </div>\n\n// //           {/* Task List */}\n// //           <h3 className=\"text-center mb-4\">Task List</h3>\n// //           {filteredTasks.length > 0 ? (\n// //             <ul className=\"list-group\">\n// //               {filteredTasks.map((task) => (\n// //                 <li\n// //                   key={task.id}\n// //                   className=\"list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2 rounded\"\n// //                 >\n// //                   <div>\n// //                     <strong>{task.activity}</strong>\n// //                     <br />\n// //                     <small>\n// //                       {task.day}, {task.date}\n// //                     </small>\n// //                     <br />\n// //                     <span\n// //                       className={`badge ${\n// //                         task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n// //                       }`}\n// //                     >\n// //                       {task.status}\n// //                     </span>\n// //                   </div>\n// //                   <div>\n// //                     <button\n// //                       className=\"btn btn-sm btn-secondary me-2 rounded-pill\"\n// //                       onClick={() => handleToggleStatus(task.id)}\n// //                     >\n// //                       Toggle Status\n// //                     </button>\n// //                     <button\n// //                       className=\"btn btn-sm btn-danger rounded-pill\"\n// //                       onClick={() => handleDeleteTask(task.id)}\n// //                     >\n// //                       Delete\n// //                     </button>\n// //                   </div>\n// //                 </li>\n// //               ))}\n// //             </ul>\n// //           ) : (\n// //             <p className=\"text-muted text-center\">No tasks available for this date.</p>\n// //           )}\n// //         </div>\n// //         <div className=\"card-footer text-center text-muted rounded-bottom\">\n// //           <small>Plan your day efficiently!</small>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ToDoList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const ToDoList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [date, setDate] = useState(\"\");\n//   const [day, setDay] = useState(\"\");\n//   const [activity, setActivity] = useState(\"\");\n//   const [status, setStatus] = useState(\"Not Done\");\n//   const [selectedDate, setSelectedDate] = useState(\"\");\n//   const [editingTask, setEditingTask] = useState(null);\n\n//   // Fetch tasks from JSON Server\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:4000/tasks\")\n//       .then((response) => setTasks(response.data))\n//       .catch((error) => console.error(\"Error fetching tasks:\", error));\n//   }, []);\n\n//   // Add or Update a Task\n//   const handleAddOrUpdateTask = (e) => {\n//     e.preventDefault();\n\n//     if (!date || !day || !activity) {\n//       alert(\"All fields are required!\");\n//       return;\n//     }\n\n//     const taskData = { date, day, activity, status };\n\n//     if (editingTask) {\n//       // Update Task\n//       axios\n//         .put(`http://localhost:4000/tasks/${editingTask.id}`, taskData)\n//         .then(() => {\n//           setTasks(\n//             tasks.map((task) =>\n//               task.id === editingTask.id ? { ...task, ...taskData } : task\n//             )\n//           );\n//           resetForm();\n//         })\n//         .catch((error) => console.error(\"Error updating task:\", error));\n//     } else {\n//       // Add Task\n//       const newTask = { id: Date.now(), ...taskData };\n//       axios\n//         .post(\"http://localhost:4000/tasks\", newTask)\n//         .then((response) => {\n//           setTasks([...tasks, response.data]);\n//           resetForm();\n//         })\n//         .catch((error) => console.error(\"Error adding task:\", error));\n//     }\n//   };\n\n//   // Reset form fields and editing state\n//   const resetForm = () => {\n//     setDate(\"\");\n//     setDay(\"\");\n//     setActivity(\"\");\n//     setStatus(\"Not Done\");\n//     setEditingTask(null);\n//   };\n\n//   // Edit a task\n//   const handleEditTask = (task) => {\n//     setEditingTask(task);\n//     setDate(task.date);\n//     setDay(task.day);\n//     setActivity(task.activity);\n//     setStatus(task.status);\n//   };\n\n//   // Delete a task\n//   const handleDeleteTask = (id) => {\n//     axios\n//       .delete(`http://localhost:4000/tasks/${id}`)\n//       .then(() => {\n//         setTasks(tasks.filter((task) => task.id !== id));\n//       })\n//       .catch((error) => console.error(\"Error deleting task:\", error));\n//   };\n\n//   // Toggle task status\n//   const handleToggleStatus = (id) => {\n//     const updatedTasks = tasks.map((task) =>\n//       task.id === id\n//         ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" }\n//         : task\n//     );\n\n//     const updatedTask = updatedTasks.find((task) => task.id === id);\n\n//     axios\n//       .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n//       .then(() => setTasks(updatedTasks))\n//       .catch((error) => console.error(\"Error updating status:\", error));\n//   };\n\n//   // Filter tasks by selected date\n//   const filteredTasks = selectedDate\n//     ? tasks.filter((task) => task.date === selectedDate)\n//     : tasks;\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <div className=\"card shadow border-0\">\n//         <div className=\"card-header bg-primary text-white text-center rounded-top\">\n//           <h1>Personal Planner</h1>\n//         </div>\n//         <div className=\"card-body p-4\">\n//           {/* Add/Edit Task Form */}\n//           <form onSubmit={handleAddOrUpdateTask} className=\"mb-4\">\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Date</label>\n//               <input\n//                 type=\"date\"\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={date}\n//                 onChange={(e) => setDate(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Day</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={day}\n//                 onChange={(e) => setDay(e.target.value)}\n//                 placeholder=\"e.g., Monday\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Activity</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={activity}\n//                 onChange={(e) => setActivity(e.target.value)}\n//                 placeholder=\"e.g., Morning Run\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Status</label>\n//               <select\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={status}\n//                 onChange={(e) => setStatus(e.target.value)}\n//               >\n//                 <option value=\"Not Done\">Not Done</option>\n//                 <option value=\"Done\">Done</option>\n//               </select>\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill shadow\">\n//               {editingTask ? \"Update Task\" : \"Add Task\"}\n//             </button>\n//           </form>\n\n//           {/* Filter by Date */}\n//           <div className=\"mb-4\">\n//             <label className=\"form-label fw-bold\">Filter by Date</label>\n//             <input\n//               type=\"date\"\n//               className=\"form-control rounded-pill shadow-sm\"\n//               value={selectedDate}\n//               onChange={(e) => setSelectedDate(e.target.value)}\n//             />\n//           </div>\n\n//           {/* Task List */}\n//           <h3 className=\"text-center mb-4\">Task List</h3>\n//           {filteredTasks.length > 0 ? (\n//             <ul className=\"list-group\">\n//               {filteredTasks.map((task) => (\n//                 <li\n//                   key={task.id}\n//                   className=\"list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2 rounded\"\n//                 >\n//                   <div>\n//                     <strong>{task.activity}</strong>\n//                     <br />\n//                     <small>\n//                       {task.day}, {task.date}\n//                     </small>\n//                     <br />\n//                     <span\n//                       className={`badge ${\n//                         task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n//                       }`}\n//                     >\n//                       {task.status}\n//                     </span>\n//                   </div>\n//                   <div>\n//                     <button\n//                       className=\"btn btn-sm btn-secondary me-2 rounded-pill\"\n//                       onClick={() => handleToggleStatus(task.id)}\n//                     >\n//                       Toggle Status\n//                     </button>\n//                     <button\n//                       className=\"btn btn-sm btn-info me-2 rounded-pill\"\n//                       onClick={() => handleEditTask(task)}\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       className=\"btn btn-sm btn-danger rounded-pill\"\n//                       onClick={() => handleDeleteTask(task.id)}\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p className=\"text-muted text-center\">No tasks available for this date.</p>\n//           )}\n//         </div>\n//         <div className=\"card-footer text-center text-muted rounded-bottom\">\n//           <small>Plan your day efficiently!</small>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ToDoList;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [activity, setActivity] = useState(\"\");\n  const [status, setStatus] = useState(\"Not Done\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [editingTask, setEditingTask] = useState(null);\n\n  // Fetch tasks from JSON Server\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/tasks\").then(response => setTasks(response.data)).catch(error => console.error(\"Error fetching tasks:\", error));\n  }, []);\n\n  // Add or Update a Task\n  const handleAddOrUpdateTask = e => {\n    e.preventDefault();\n    if (!date || !day || !activity) {\n      alert(\"All fields are required!\");\n      return;\n    }\n    const taskData = {\n      date,\n      day,\n      activity,\n      status\n    };\n    if (editingTask) {\n      // Update Task\n      axios.put(`http://localhost:4000/tasks/${editingTask.id}`, taskData).then(() => {\n        setTasks(tasks.map(task => task.id === editingTask.id ? {\n          ...task,\n          ...taskData\n        } : task));\n        resetForm();\n      }).catch(error => console.error(\"Error updating task:\", error));\n    } else {\n      // Add Task\n      const newTask = {\n        id: Date.now(),\n        ...taskData\n      };\n      axios.post(\"http://localhost:4000/tasks\", newTask).then(response => {\n        setTasks([...tasks, response.data]);\n        resetForm();\n      }).catch(error => console.error(\"Error adding task:\", error));\n    }\n  };\n\n  // Reset form fields and editing state\n  const resetForm = () => {\n    setDate(\"\");\n    setDay(\"\");\n    setActivity(\"\");\n    setStatus(\"Not Done\");\n    setEditingTask(null);\n  };\n\n  // Edit a task\n  const handleEditTask = task => {\n    setEditingTask(task);\n    setDate(task.date);\n    setDay(task.day);\n    setActivity(task.activity);\n    setStatus(task.status);\n  };\n\n  // Delete a task\n  const handleDeleteTask = id => {\n    axios.delete(`http://localhost:4000/tasks/${id}`).then(() => {\n      setTasks(tasks.filter(task => task.id !== id));\n    }).catch(error => console.error(\"Error deleting task:\", error));\n  };\n\n  // Toggle task status\n  const handleToggleStatus = id => {\n    const updatedTasks = tasks.map(task => task.id === id ? {\n      ...task,\n      status: task.status === \"Done\" ? \"Not Done\" : \"Done\"\n    } : task);\n    const updatedTask = updatedTasks.find(task => task.id === id);\n    axios.put(`http://localhost:4000/tasks/${id}`, updatedTask).then(() => setTasks(updatedTasks)).catch(error => console.error(\"Error updating status:\", error));\n  };\n\n  // Filter tasks by selected date\n  const filteredTasks = selectedDate ? tasks.filter(task => task.date === selectedDate) : tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card shadow border-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header bg-primary text-white text-center rounded-top\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Personal Planner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddOrUpdateTask,\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label fw-bold\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 895,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              className: \"form-control rounded-pill shadow-sm\",\n              value: date,\n              onChange: e => setDate(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label fw-bold\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control rounded-pill shadow-sm\",\n              value: day,\n              onChange: e => setDay(e.target.value),\n              placeholder: \"e.g., Monday\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 904,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label fw-bold\",\n              children: \"Activity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control rounded-pill shadow-sm\",\n              value: activity,\n              onChange: e => setActivity(e.target.value),\n              placeholder: \"e.g., Morning Run\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label fw-bold\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control rounded-pill shadow-sm\",\n              value: status,\n              onChange: e => setStatus(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Not Done\",\n                children: \"Not Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Done\",\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 934,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary w-100 rounded-pill shadow\",\n            children: editingTask ? \"Update Task\" : \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label fw-bold\",\n            children: \"Filter by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            className: \"form-control rounded-pill shadow-sm\",\n            value: selectedDate,\n            onChange: e => setSelectedDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 945,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-4\",\n          children: \"Task List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 11\n        }, this), filteredTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2 rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: task.activity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 964,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [task.day, \", \", task.date]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `badge ${task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"}`,\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 969,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-secondary me-2 rounded-pill\",\n                onClick: () => handleToggleStatus(task.id),\n                children: \"Toggle Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-info me-2 rounded-pill\",\n                onClick: () => handleEditTask(task),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-danger rounded-pill\",\n                onClick: () => handleDeleteTask(task.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted text-center\",\n          children: \"No tasks available for this date.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer text-center text-muted rounded-bottom\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Plan your day efficiently!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 886,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"Wx1vy/uisu8mBrQCdZ2Qrb6nWyU=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","date","setDate","day","setDay","activity","setActivity","status","setStatus","selectedDate","setSelectedDate","editingTask","setEditingTask","get","then","response","data","catch","error","console","handleAddOrUpdateTask","e","preventDefault","alert","taskData","put","id","map","task","resetForm","newTask","Date","now","post","handleEditTask","handleDeleteTask","delete","filter","handleToggleStatus","updatedTasks","updatedTask","find","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","length","onClick","_c","$RefreshReg$"],"sources":["/Users/macbookairm1/To-do-list/src/Components/ToDoList.js"],"sourcesContent":["// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import { Button, Form, ListGroup, Modal } from \"react-bootstrap\";\n// // import \"bootstrap/dist/css/bootstrap.min.css\"; // Correctly import the CSS\n\n// // const App = () => {\n// //   const [tasks, setTasks] = useState([]);\n// //   const [task, setTask] = useState(\"\");\n// //   const [editingTask, setEditingTask] = useState(null);\n\n// //   // Fetch tasks from db.json\n// //   useEffect(() => {\n// //     axios.get(\"http://localhost:4000/tasks\").then((response) => {\n// //       setTasks(response.data);\n// //     });\n// //   }, []);\n\n// //   // Add a new task\n// //   const handleAddTask = (e) => {\n// //     e.preventDefault();\n// //     if (task.trim() !== \"\") {\n// //       const newTask = {\n// //         id: Date.now(),\n// //         text: task,\n// //         date: new Date().toLocaleDateString(),\n// //         time: new Date().toLocaleTimeString(),\n// //       };\n\n// //       axios.post(\"http://localhost:4000/tasks\", newTask).then(() => {\n// //         setTasks([...tasks, newTask]);\n// //         setTask(\"\");\n// //       });\n// //     }\n// //   };\n\n// //   // Delete a task\n// //   const handleDelete = (id) => {\n// //     axios.delete(`http://localhost:4000/tasks/${id}`).then(() => {\n// //       setTasks(tasks.filter((task) => task.id !== id));\n// //     });\n// //   };\n\n// //   // Open editing modal\n// //   const handleEdit = (task) => {\n// //     setEditingTask(task);\n// //   };\n\n// //   // Save the edited task\n// //   const handleSaveEdit = () => {\n// //     axios\n// //       .put(`http://localhost:4000/tasks/${editingTask.id}`, editingTask)\n// //       .then(() => {\n// //         setTasks(\n// //           tasks.map((task) =>\n// //             task.id === editingTask.id ? editingTask : task\n// //           )\n// //         );\n// //         setEditingTask(null);\n// //       });\n// //   };\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h1 className=\"text-center\">To-Do List</h1>\n\n// //       {/* Add Task Form */}\n// //       <Form onSubmit={handleAddTask} className=\"mb-4\">\n// //         <Form.Group controlId=\"taskInput\">\n// //           <Form.Control\n// //             type=\"text\"\n// //             placeholder=\"Enter a new task\"\n// //             value={task}\n// //             onChange={(e) => setTask(e.target.value)}\n// //           />\n// //         </Form.Group>\n// //         <Button type=\"submit\" className=\"mt-2 w-100\" variant=\"primary\">\n// //           Add Task\n// //         </Button>\n// //       </Form>\n\n// //       {/* Task List */}\n// //       <ListGroup>\n// //         {tasks.map((task) => (\n// //           <ListGroup.Item key={task.id} className=\"d-flex justify-content-between align-items-center\">\n// //             <div>\n// //               <strong>{task.text}</strong>\n// //               <br />\n// //               <small>\n// //                 {task.date} - {task.time}\n// //               </small>\n// //             </div>\n// //             <div>\n// //               <Button\n// //                 variant=\"warning\"\n// //                 size=\"sm\"\n// //                 className=\"me-2\"\n// //                 onClick={() => handleEdit(task)}\n// //               >\n// //                 Edit\n// //               </Button>\n// //               <Button\n// //                 variant=\"danger\"\n// //                 size=\"sm\"\n// //                 onClick={() => handleDelete(task.id)}\n// //               >\n// //                 Delete\n// //               </Button>\n// //             </div>\n// //           </ListGroup.Item>\n// //         ))}\n// //       </ListGroup>\n\n// //       {/* Edit Modal */}\n// //       {editingTask && (\n// //         <Modal show onHide={() => setEditingTask(null)}>\n// //           <Modal.Header closeButton>\n// //             <Modal.Title>Edit Task</Modal.Title>\n// //           </Modal.Header>\n// //           <Modal.Body>\n// //             <Form.Group>\n// //               <Form.Label>Task</Form.Label>\n// //               <Form.Control\n// //                 type=\"text\"\n// //                 value={editingTask.text}\n// //                 onChange={(e) =>\n// //                   setEditingTask({ ...editingTask, text: e.target.value })\n// //                 }\n// //               />\n// //             </Form.Group>\n// //           </Modal.Body>\n// //           <Modal.Footer>\n// //             <Button variant=\"secondary\" onClick={() => setEditingTask(null)}>\n// //               Cancel\n// //             </Button>\n// //             <Button variant=\"primary\" onClick={handleSaveEdit}>\n// //               Save Changes\n// //             </Button>\n// //           </Modal.Footer>\n// //         </Modal>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default App;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// // const ToDoList = () => {\n// //   const [tasks, setTasks] = useState([]);\n// //   const [date, setDate] = useState(\"\");\n// //   const [day, setDay] = useState(\"\");\n// //   const [activity, setActivity] = useState(\"\");\n// //   const [status, setStatus] = useState(\"Not Done\");\n// //   const [selectedDate, setSelectedDate] = useState(\"\");\n\n// //   // Fetch tasks from JSON Server\n// //   useEffect(() => {\n// //     axios\n// //       .get(\"http://localhost:4000/tasks\")\n// //       .then((response) => setTasks(response.data))\n// //       .catch((error) => console.error(\"Error fetching tasks:\", error));\n// //   }, []);\n\n// //   // Add a new task\n// //   const handleAddTask = (e) => {\n// //     e.preventDefault();\n\n// //     if (!date || !day || !activity) {\n// //       alert(\"All fields are required!\");\n// //       return;\n// //     }\n\n// //     const newTask = {\n// //       id: Date.now(),\n// //       date,\n// //       day,\n// //       activity,\n// //       status,\n// //     };\n\n// //     axios\n// //       .post(\"http://localhost:4000/tasks\", newTask)\n// //       .then((response) => {\n// //         setTasks([...tasks, response.data]);\n// //         setDate(\"\");\n// //         setDay(\"\");\n// //         setActivity(\"\");\n// //         setStatus(\"Not Done\");\n// //       })\n// //       .catch((error) => console.error(\"Error adding task:\", error));\n// //   };\n\n// //   // Delete a task\n// //   const handleDeleteTask = (id) => {\n// //     axios\n// //       .delete(`http://localhost:4000/tasks/${id}`)\n// //       .then(() => {\n// //         setTasks(tasks.filter((task) => task.id !== id));\n// //       })\n// //       .catch((error) => console.error(\"Error deleting task:\", error));\n// //   };\n\n// //   // Toggle task status\n// //   const handleToggleStatus = (id) => {\n// //     const updatedTasks = tasks.map((task) =>\n// //       task.id === id ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" } : task\n// //     );\n\n// //     const updatedTask = updatedTasks.find((task) => task.id === id);\n\n// //     axios\n// //       .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n// //       .then(() => setTasks(updatedTasks))\n// //       .catch((error) => console.error(\"Error updating status:\", error));\n// //   };\n\n// //   // Filter tasks by selected date\n// //   const filteredTasks = selectedDate\n// //     ? tasks.filter((task) => task.date === selectedDate)\n// //     : tasks;\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <h1 className=\"text-center mb-4\">Personal Planner</h1>\n\n// //       {/* Add Task Form */}\n// //       <form onSubmit={handleAddTask} className=\"mb-4\">\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Date</label>\n// //           <input\n// //             type=\"date\"\n// //             className=\"form-control\"\n// //             value={date}\n// //             onChange={(e) => setDate(e.target.value)}\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Day</label>\n// //           <input\n// //             type=\"text\"\n// //             className=\"form-control\"\n// //             value={day}\n// //             onChange={(e) => setDay(e.target.value)}\n// //             placeholder=\"e.g., Monday\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Activity</label>\n// //           <input\n// //             type=\"text\"\n// //             className=\"form-control\"\n// //             value={activity}\n// //             onChange={(e) => setActivity(e.target.value)}\n// //             placeholder=\"e.g., Morning Run\"\n// //             required\n// //           />\n// //         </div>\n// //         <div className=\"mb-3\">\n// //           <label className=\"form-label\">Status</label>\n// //           <select\n// //             className=\"form-control\"\n// //             value={status}\n// //             onChange={(e) => setStatus(e.target.value)}\n// //           >\n// //             <option value=\"Not Done\">Not Done</option>\n// //             <option value=\"Done\">Done</option>\n// //           </select>\n// //         </div>\n// //         <button type=\"submit\" className=\"btn btn-primary w-100\">\n// //           Add Task\n// //         </button>\n// //       </form>\n\n// //       {/* Filter by Date */}\n// //       <div className=\"mb-4\">\n// //         <label className=\"form-label\">Filter by Date</label>\n// //         <input\n// //           type=\"date\"\n// //           className=\"form-control\"\n// //           value={selectedDate}\n// //           onChange={(e) => setSelectedDate(e.target.value)}\n// //         />\n// //       </div>\n\n// //       {/* Task List */}\n// //       <h3>Task List</h3>\n// //       {filteredTasks.length > 0 ? (\n// //         <ul className=\"list-group\">\n// //           {filteredTasks.map((task) => (\n// //             <li\n// //               key={task.id}\n// //               className=\"list-group-item d-flex justify-content-between align-items-center\"\n// //             >\n// //               <div>\n// //                 <strong>{task.activity}</strong>\n// //                 <br />\n// //                 <small>\n// //                   {task.day}, {task.date}\n// //                 </small>\n// //                 <br />\n// //                 <span\n// //                   className={`badge ${\n// //                     task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n// //                   }`}\n// //                 >\n// //                   {task.status}\n// //                 </span>\n// //               </div>\n// //               <div>\n// //                 <button\n// //                   className=\"btn btn-sm btn-secondary me-2\"\n// //                   onClick={() => handleToggleStatus(task.id)}\n// //                 >\n// //                   Toggle Status\n// //                 </button>\n// //                 <button\n// //                   className=\"btn btn-sm btn-danger\"\n// //                   onClick={() => handleDeleteTask(task.id)}\n// //                 >\n// //                   Delete\n// //                 </button>\n// //               </div>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       ) : (\n// //         <p className=\"text-muted\">No tasks available for this date.</p>\n// //       )}\n// //     </div>\n// //   );\n// // };\n\n// // export default ToDoList;\n\n// // import React, { useState, useEffect } from \"react\";\n// // import axios from \"axios\";\n// // import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// // const ToDoList = () => {\n// //   const [tasks, setTasks] = useState([]);\n// //   const [date, setDate] = useState(\"\");\n// //   const [day, setDay] = useState(\"\");\n// //   const [activity, setActivity] = useState(\"\");\n// //   const [status, setStatus] = useState(\"Not Done\");\n// //   const [selectedDate, setSelectedDate] = useState(\"\");\n\n// //   // Fetch tasks from JSON Server\n// //   useEffect(() => {\n// //     axios\n// //       .get(\"http://localhost:4000/tasks\")\n// //       .then((response) => setTasks(response.data))\n// //       .catch((error) => console.error(\"Error fetching tasks:\", error));\n// //   }, []);\n\n// //   // Add a new task\n// //   const handleAddTask = (e) => {\n// //     e.preventDefault();\n\n// //     if (!date || !day || !activity) {\n// //       alert(\"All fields are required!\");\n// //       return;\n// //     }\n\n// //     const newTask = {\n// //       id: Date.now(),\n// //       date,\n// //       day,\n// //       activity,\n// //       status,\n// //     };\n\n// //     axios\n// //       .post(\"http://localhost:4000/tasks\", newTask)\n// //       .then((response) => {\n// //         setTasks([...tasks, response.data]);\n// //         setDate(\"\");\n// //         setDay(\"\");\n// //         setActivity(\"\");\n// //         setStatus(\"Not Done\");\n// //       })\n// //       .catch((error) => console.error(\"Error adding task:\", error));\n// //   };\n\n// //   // Delete a task\n// //   const handleDeleteTask = (id) => {\n// //     axios\n// //       .delete(`http://localhost:4000/tasks/${id}`)\n// //       .then(() => {\n// //         setTasks(tasks.filter((task) => task.id !== id));\n// //       })\n// //       .catch((error) => console.error(\"Error deleting task:\", error));\n// //   };\n\n// //   // Toggle task status\n// //   const handleToggleStatus = (id) => {\n// //     const updatedTasks = tasks.map((task) =>\n// //       task.id === id ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" } : task\n// //     );\n\n// //     const updatedTask = updatedTasks.find((task) => task.id === id);\n\n// //     axios\n// //       .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n// //       .then(() => setTasks(updatedTasks))\n// //       .catch((error) => console.error(\"Error updating status:\", error));\n// //   };\n\n// //   // Filter tasks by selected date\n// //   const filteredTasks = selectedDate\n// //     ? tasks.filter((task) => task.date === selectedDate)\n// //     : tasks;\n\n// //   return (\n// //     <div className=\"container mt-5\">\n// //       <div className=\"card shadow border-0\">\n// //         <div className=\"card-header bg-primary text-white text-center rounded-top\">\n// //           <h1>Personal Planner</h1>\n// //         </div>\n// //         <div className=\"card-body p-4\">\n// //           {/* Add Task Form */}\n// //           <form onSubmit={handleAddTask} className=\"mb-4\">\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Date</label>\n// //               <input\n// //                 type=\"date\"\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={date}\n// //                 onChange={(e) => setDate(e.target.value)}\n// //                 required\n// //               />\n// //             </div>\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Day</label>\n// //               <input\n// //                 type=\"text\"\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={day}\n// //                 onChange={(e) => setDay(e.target.value)}\n// //                 placeholder=\"e.g., Monday\"\n// //                 required\n// //               />\n// //             </div>\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Activity</label>\n// //               <input\n// //                 type=\"text\"\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={activity}\n// //                 onChange={(e) => setActivity(e.target.value)}\n// //                 placeholder=\"e.g., Morning Run\"\n// //                 required\n// //               />\n// //             </div>\n// //             <div className=\"mb-3\">\n// //               <label className=\"form-label fw-bold\">Status</label>\n// //               <select\n// //                 className=\"form-control rounded-pill shadow-sm\"\n// //                 value={status}\n// //                 onChange={(e) => setStatus(e.target.value)}\n// //               >\n// //                 <option value=\"Not Done\">Not Done</option>\n// //                 <option value=\"Done\">Done</option>\n// //               </select>\n// //             </div>\n// //             <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill shadow\">\n// //               Add Task\n// //             </button>\n// //           </form>\n\n// //           {/* Filter by Date */}\n// //           <div className=\"mb-4\">\n// //             <label className=\"form-label fw-bold\">Filter by Date</label>\n// //             <input\n// //               type=\"date\"\n// //               className=\"form-control rounded-pill shadow-sm\"\n// //               value={selectedDate}\n// //               onChange={(e) => setSelectedDate(e.target.value)}\n// //             />\n// //           </div>\n\n// //           {/* Task List */}\n// //           <h3 className=\"text-center mb-4\">Task List</h3>\n// //           {filteredTasks.length > 0 ? (\n// //             <ul className=\"list-group\">\n// //               {filteredTasks.map((task) => (\n// //                 <li\n// //                   key={task.id}\n// //                   className=\"list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2 rounded\"\n// //                 >\n// //                   <div>\n// //                     <strong>{task.activity}</strong>\n// //                     <br />\n// //                     <small>\n// //                       {task.day}, {task.date}\n// //                     </small>\n// //                     <br />\n// //                     <span\n// //                       className={`badge ${\n// //                         task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n// //                       }`}\n// //                     >\n// //                       {task.status}\n// //                     </span>\n// //                   </div>\n// //                   <div>\n// //                     <button\n// //                       className=\"btn btn-sm btn-secondary me-2 rounded-pill\"\n// //                       onClick={() => handleToggleStatus(task.id)}\n// //                     >\n// //                       Toggle Status\n// //                     </button>\n// //                     <button\n// //                       className=\"btn btn-sm btn-danger rounded-pill\"\n// //                       onClick={() => handleDeleteTask(task.id)}\n// //                     >\n// //                       Delete\n// //                     </button>\n// //                   </div>\n// //                 </li>\n// //               ))}\n// //             </ul>\n// //           ) : (\n// //             <p className=\"text-muted text-center\">No tasks available for this date.</p>\n// //           )}\n// //         </div>\n// //         <div className=\"card-footer text-center text-muted rounded-bottom\">\n// //           <small>Plan your day efficiently!</small>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default ToDoList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// const ToDoList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [date, setDate] = useState(\"\");\n//   const [day, setDay] = useState(\"\");\n//   const [activity, setActivity] = useState(\"\");\n//   const [status, setStatus] = useState(\"Not Done\");\n//   const [selectedDate, setSelectedDate] = useState(\"\");\n//   const [editingTask, setEditingTask] = useState(null);\n\n//   // Fetch tasks from JSON Server\n//   useEffect(() => {\n//     axios\n//       .get(\"http://localhost:4000/tasks\")\n//       .then((response) => setTasks(response.data))\n//       .catch((error) => console.error(\"Error fetching tasks:\", error));\n//   }, []);\n\n//   // Add or Update a Task\n//   const handleAddOrUpdateTask = (e) => {\n//     e.preventDefault();\n\n//     if (!date || !day || !activity) {\n//       alert(\"All fields are required!\");\n//       return;\n//     }\n\n//     const taskData = { date, day, activity, status };\n\n//     if (editingTask) {\n//       // Update Task\n//       axios\n//         .put(`http://localhost:4000/tasks/${editingTask.id}`, taskData)\n//         .then(() => {\n//           setTasks(\n//             tasks.map((task) =>\n//               task.id === editingTask.id ? { ...task, ...taskData } : task\n//             )\n//           );\n//           resetForm();\n//         })\n//         .catch((error) => console.error(\"Error updating task:\", error));\n//     } else {\n//       // Add Task\n//       const newTask = { id: Date.now(), ...taskData };\n//       axios\n//         .post(\"http://localhost:4000/tasks\", newTask)\n//         .then((response) => {\n//           setTasks([...tasks, response.data]);\n//           resetForm();\n//         })\n//         .catch((error) => console.error(\"Error adding task:\", error));\n//     }\n//   };\n\n//   // Reset form fields and editing state\n//   const resetForm = () => {\n//     setDate(\"\");\n//     setDay(\"\");\n//     setActivity(\"\");\n//     setStatus(\"Not Done\");\n//     setEditingTask(null);\n//   };\n\n//   // Edit a task\n//   const handleEditTask = (task) => {\n//     setEditingTask(task);\n//     setDate(task.date);\n//     setDay(task.day);\n//     setActivity(task.activity);\n//     setStatus(task.status);\n//   };\n\n//   // Delete a task\n//   const handleDeleteTask = (id) => {\n//     axios\n//       .delete(`http://localhost:4000/tasks/${id}`)\n//       .then(() => {\n//         setTasks(tasks.filter((task) => task.id !== id));\n//       })\n//       .catch((error) => console.error(\"Error deleting task:\", error));\n//   };\n\n//   // Toggle task status\n//   const handleToggleStatus = (id) => {\n//     const updatedTasks = tasks.map((task) =>\n//       task.id === id\n//         ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" }\n//         : task\n//     );\n\n//     const updatedTask = updatedTasks.find((task) => task.id === id);\n\n//     axios\n//       .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n//       .then(() => setTasks(updatedTasks))\n//       .catch((error) => console.error(\"Error updating status:\", error));\n//   };\n\n//   // Filter tasks by selected date\n//   const filteredTasks = selectedDate\n//     ? tasks.filter((task) => task.date === selectedDate)\n//     : tasks;\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <div className=\"card shadow border-0\">\n//         <div className=\"card-header bg-primary text-white text-center rounded-top\">\n//           <h1>Personal Planner</h1>\n//         </div>\n//         <div className=\"card-body p-4\">\n//           {/* Add/Edit Task Form */}\n//           <form onSubmit={handleAddOrUpdateTask} className=\"mb-4\">\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Date</label>\n//               <input\n//                 type=\"date\"\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={date}\n//                 onChange={(e) => setDate(e.target.value)}\n//                 required\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Day</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={day}\n//                 onChange={(e) => setDay(e.target.value)}\n//                 placeholder=\"e.g., Monday\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Activity</label>\n//               <input\n//                 type=\"text\"\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={activity}\n//                 onChange={(e) => setActivity(e.target.value)}\n//                 placeholder=\"e.g., Morning Run\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"mb-3\">\n//               <label className=\"form-label fw-bold\">Status</label>\n//               <select\n//                 className=\"form-control rounded-pill shadow-sm\"\n//                 value={status}\n//                 onChange={(e) => setStatus(e.target.value)}\n//               >\n//                 <option value=\"Not Done\">Not Done</option>\n//                 <option value=\"Done\">Done</option>\n//               </select>\n//             </div>\n//             <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill shadow\">\n//               {editingTask ? \"Update Task\" : \"Add Task\"}\n//             </button>\n//           </form>\n\n//           {/* Filter by Date */}\n//           <div className=\"mb-4\">\n//             <label className=\"form-label fw-bold\">Filter by Date</label>\n//             <input\n//               type=\"date\"\n//               className=\"form-control rounded-pill shadow-sm\"\n//               value={selectedDate}\n//               onChange={(e) => setSelectedDate(e.target.value)}\n//             />\n//           </div>\n\n//           {/* Task List */}\n//           <h3 className=\"text-center mb-4\">Task List</h3>\n//           {filteredTasks.length > 0 ? (\n//             <ul className=\"list-group\">\n//               {filteredTasks.map((task) => (\n//                 <li\n//                   key={task.id}\n//                   className=\"list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2 rounded\"\n//                 >\n//                   <div>\n//                     <strong>{task.activity}</strong>\n//                     <br />\n//                     <small>\n//                       {task.day}, {task.date}\n//                     </small>\n//                     <br />\n//                     <span\n//                       className={`badge ${\n//                         task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n//                       }`}\n//                     >\n//                       {task.status}\n//                     </span>\n//                   </div>\n//                   <div>\n//                     <button\n//                       className=\"btn btn-sm btn-secondary me-2 rounded-pill\"\n//                       onClick={() => handleToggleStatus(task.id)}\n//                     >\n//                       Toggle Status\n//                     </button>\n//                     <button\n//                       className=\"btn btn-sm btn-info me-2 rounded-pill\"\n//                       onClick={() => handleEditTask(task)}\n//                     >\n//                       Edit\n//                     </button>\n//                     <button\n//                       className=\"btn btn-sm btn-danger rounded-pill\"\n//                       onClick={() => handleDeleteTask(task.id)}\n//                     >\n//                       Delete\n//                     </button>\n//                   </div>\n//                 </li>\n//               ))}\n//             </ul>\n//           ) : (\n//             <p className=\"text-muted text-center\">No tasks available for this date.</p>\n//           )}\n//         </div>\n//         <div className=\"card-footer text-center text-muted rounded-bottom\">\n//           <small>Plan your day efficiently!</small>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ToDoList;\n\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [activity, setActivity] = useState(\"\");\n  const [status, setStatus] = useState(\"Not Done\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n  const [editingTask, setEditingTask] = useState(null);\n\n  // Fetch tasks from JSON Server\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/tasks\")\n      .then((response) => setTasks(response.data))\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\n  }, []);\n\n  // Add or Update a Task\n  const handleAddOrUpdateTask = (e) => {\n    e.preventDefault();\n\n    if (!date || !day || !activity) {\n      alert(\"All fields are required!\");\n      return;\n    }\n\n    const taskData = { date, day, activity, status };\n\n    if (editingTask) {\n      // Update Task\n      axios\n        .put(`http://localhost:4000/tasks/${editingTask.id}`, taskData)\n        .then(() => {\n          setTasks(\n            tasks.map((task) =>\n              task.id === editingTask.id ? { ...task, ...taskData } : task\n            )\n          );\n          resetForm();\n        })\n        .catch((error) => console.error(\"Error updating task:\", error));\n    } else {\n      // Add Task\n      const newTask = { id: Date.now(), ...taskData };\n      axios\n        .post(\"http://localhost:4000/tasks\", newTask)\n        .then((response) => {\n          setTasks([...tasks, response.data]);\n          resetForm();\n        })\n        .catch((error) => console.error(\"Error adding task:\", error));\n    }\n  };\n\n  // Reset form fields and editing state\n  const resetForm = () => {\n    setDate(\"\");\n    setDay(\"\");\n    setActivity(\"\");\n    setStatus(\"Not Done\");\n    setEditingTask(null);\n  };\n\n  // Edit a task\n  const handleEditTask = (task) => {\n    setEditingTask(task);\n    setDate(task.date);\n    setDay(task.day);\n    setActivity(task.activity);\n    setStatus(task.status);\n  };\n\n  // Delete a task\n  const handleDeleteTask = (id) => {\n    axios\n      .delete(`http://localhost:4000/tasks/${id}`)\n      .then(() => {\n        setTasks(tasks.filter((task) => task.id !== id));\n      })\n      .catch((error) => console.error(\"Error deleting task:\", error));\n  };\n\n  // Toggle task status\n  const handleToggleStatus = (id) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === id\n        ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" }\n        : task\n    );\n\n    const updatedTask = updatedTasks.find((task) => task.id === id);\n\n    axios\n      .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n      .then(() => setTasks(updatedTasks))\n      .catch((error) => console.error(\"Error updating status:\", error));\n  };\n\n  // Filter tasks by selected date\n  const filteredTasks = selectedDate\n    ? tasks.filter((task) => task.date === selectedDate)\n    : tasks;\n\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"card shadow border-0\">\n        <div className=\"card-header bg-primary text-white text-center rounded-top\">\n          <h1>Personal Planner</h1>\n        </div>\n        <div className=\"card-body p-4\">\n          {/* Add/Edit Task Form */}\n          <form onSubmit={handleAddOrUpdateTask} className=\"mb-4\">\n            <div className=\"mb-3\">\n              <label className=\"form-label fw-bold\">Date</label>\n              <input\n                type=\"date\"\n                className=\"form-control rounded-pill shadow-sm\"\n                value={date}\n                onChange={(e) => setDate(e.target.value)}\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label fw-bold\">Day</label>\n              <input\n                type=\"text\"\n                className=\"form-control rounded-pill shadow-sm\"\n                value={day}\n                onChange={(e) => setDay(e.target.value)}\n                placeholder=\"e.g., Monday\"\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label fw-bold\">Activity</label>\n              <input\n                type=\"text\"\n                className=\"form-control rounded-pill shadow-sm\"\n                value={activity}\n                onChange={(e) => setActivity(e.target.value)}\n                placeholder=\"e.g., Morning Run\"\n                required\n              />\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label fw-bold\">Status</label>\n              <select\n                className=\"form-control rounded-pill shadow-sm\"\n                value={status}\n                onChange={(e) => setStatus(e.target.value)}\n              >\n                <option value=\"Not Done\">Not Done</option>\n                <option value=\"Done\">Done</option>\n              </select>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary w-100 rounded-pill shadow\">\n              {editingTask ? \"Update Task\" : \"Add Task\"}\n            </button>\n          </form>\n\n          {/* Filter by Date */}\n          <div className=\"mb-4\">\n            <label className=\"form-label fw-bold\">Filter by Date</label>\n            <input\n              type=\"date\"\n              className=\"form-control rounded-pill shadow-sm\"\n              value={selectedDate}\n              onChange={(e) => setSelectedDate(e.target.value)}\n            />\n          </div>\n\n          {/* Task List */}\n          <h3 className=\"text-center mb-4\">Task List</h3>\n          {filteredTasks.length > 0 ? (\n            <ul className=\"list-group\">\n              {filteredTasks.map((task) => (\n                <li\n                  key={task.id}\n                  className=\"list-group-item d-flex justify-content-between align-items-center shadow-sm mb-2 rounded\"\n                >\n                  <div>\n                    <strong>{task.activity}</strong>\n                    <br />\n                    <small>\n                      {task.day}, {task.date}\n                    </small>\n                    <br />\n                    <span\n                      className={`badge ${\n                        task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n                      }`}\n                    >\n                      {task.status}\n                    </span>\n                  </div>\n                  <div>\n                    <button\n                      className=\"btn btn-sm btn-secondary me-2 rounded-pill\"\n                      onClick={() => handleToggleStatus(task.id)}\n                    >\n                      Toggle Status\n                    </button>\n                    <button\n                      className=\"btn btn-sm btn-info me-2 rounded-pill\"\n                      onClick={() => handleEditTask(task)}\n                    >\n                      Edit\n                    </button>\n                    <button\n                      className=\"btn btn-sm btn-danger rounded-pill\"\n                      onClick={() => handleDeleteTask(task.id)}\n                    >\n                      Delete\n                    </button>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            <p className=\"text-muted text-center\">No tasks available for this date.</p>\n          )}\n        </div>\n        <div className=\"card-footer text-center text-muted rounded-bottom\">\n          <small>Plan your day efficiently!</small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ToDoList;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}