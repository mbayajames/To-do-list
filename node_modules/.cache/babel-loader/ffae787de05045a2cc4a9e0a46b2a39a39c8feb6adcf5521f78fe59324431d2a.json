{"ast":null,"code":"var _jsxFileName = \"/Users/macbookairm1/To-do-list/src/Components/ToDoList.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Button, Form, ListGroup, Modal } from \"react-bootstrap\";\n// import \"bootstrap/dist/css/bootstrap.min.css\"; // Correctly import the CSS\n\n// const App = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [task, setTask] = useState(\"\");\n//   const [editingTask, setEditingTask] = useState(null);\n\n//   // Fetch tasks from db.json\n//   useEffect(() => {\n//     axios.get(\"http://localhost:4000/tasks\").then((response) => {\n//       setTasks(response.data);\n//     });\n//   }, []);\n\n//   // Add a new task\n//   const handleAddTask = (e) => {\n//     e.preventDefault();\n//     if (task.trim() !== \"\") {\n//       const newTask = {\n//         id: Date.now(),\n//         text: task,\n//         date: new Date().toLocaleDateString(),\n//         time: new Date().toLocaleTimeString(),\n//       };\n\n//       axios.post(\"http://localhost:4000/tasks\", newTask).then(() => {\n//         setTasks([...tasks, newTask]);\n//         setTask(\"\");\n//       });\n//     }\n//   };\n\n//   // Delete a task\n//   const handleDelete = (id) => {\n//     axios.delete(`http://localhost:4000/tasks/${id}`).then(() => {\n//       setTasks(tasks.filter((task) => task.id !== id));\n//     });\n//   };\n\n//   // Open editing modal\n//   const handleEdit = (task) => {\n//     setEditingTask(task);\n//   };\n\n//   // Save the edited task\n//   const handleSaveEdit = () => {\n//     axios\n//       .put(`http://localhost:4000/tasks/${editingTask.id}`, editingTask)\n//       .then(() => {\n//         setTasks(\n//           tasks.map((task) =>\n//             task.id === editingTask.id ? editingTask : task\n//           )\n//         );\n//         setEditingTask(null);\n//       });\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center\">To-Do List</h1>\n\n//       {/* Add Task Form */}\n//       <Form onSubmit={handleAddTask} className=\"mb-4\">\n//         <Form.Group controlId=\"taskInput\">\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter a new task\"\n//             value={task}\n//             onChange={(e) => setTask(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Button type=\"submit\" className=\"mt-2 w-100\" variant=\"primary\">\n//           Add Task\n//         </Button>\n//       </Form>\n\n//       {/* Task List */}\n//       <ListGroup>\n//         {tasks.map((task) => (\n//           <ListGroup.Item key={task.id} className=\"d-flex justify-content-between align-items-center\">\n//             <div>\n//               <strong>{task.text}</strong>\n//               <br />\n//               <small>\n//                 {task.date} - {task.time}\n//               </small>\n//             </div>\n//             <div>\n//               <Button\n//                 variant=\"warning\"\n//                 size=\"sm\"\n//                 className=\"me-2\"\n//                 onClick={() => handleEdit(task)}\n//               >\n//                 Edit\n//               </Button>\n//               <Button\n//                 variant=\"danger\"\n//                 size=\"sm\"\n//                 onClick={() => handleDelete(task.id)}\n//               >\n//                 Delete\n//               </Button>\n//             </div>\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n\n//       {/* Edit Modal */}\n//       {editingTask && (\n//         <Modal show onHide={() => setEditingTask(null)}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Edit Task</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n//             <Form.Group>\n//               <Form.Label>Task</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={editingTask.text}\n//                 onChange={(e) =>\n//                   setEditingTask({ ...editingTask, text: e.target.value })\n//                 }\n//               />\n//             </Form.Group>\n//           </Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={() => setEditingTask(null)}>\n//               Cancel\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleSaveEdit}>\n//               Save Changes\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [activity, setActivity] = useState(\"\");\n  const [status, setStatus] = useState(\"Not Done\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n\n  // Fetch tasks from JSON Server\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/tasks\").then(response => setTasks(response.data)).catch(error => console.error(\"Error fetching tasks:\", error));\n  }, []);\n\n  // Add a new task\n  const handleAddTask = e => {\n    e.preventDefault();\n    if (!date || !day || !activity) {\n      alert(\"All fields are required!\");\n      return;\n    }\n    const newTask = {\n      id: Date.now(),\n      date,\n      day,\n      activity,\n      status\n    };\n    axios.post(\"http://localhost:4000/tasks\", newTask).then(response => {\n      setTasks([...tasks, response.data]);\n      setDate(\"\");\n      setDay(\"\");\n      setActivity(\"\");\n      setStatus(\"Not Done\");\n    }).catch(error => console.error(\"Error adding task:\", error));\n  };\n\n  // Delete a task\n  const handleDeleteTask = id => {\n    axios.delete(`http://localhost:4000/tasks/${id}`).then(() => {\n      setTasks(tasks.filter(task => task.id !== id));\n    }).catch(error => console.error(\"Error deleting task:\", error));\n  };\n\n  // Toggle task status\n  const handleToggleStatus = id => {\n    const updatedTasks = tasks.map(task => task.id === id ? {\n      ...task,\n      status: task.status === \"Done\" ? \"Not Done\" : \"Done\"\n    } : task);\n    const updatedTask = updatedTasks.find(task => task.id === id);\n    axios.put(`http://localhost:4000/tasks/${id}`, updatedTask).then(() => setTasks(updatedTasks)).catch(error => console.error(\"Error updating status:\", error));\n  };\n\n  // Filter tasks by selected date\n  const filteredTasks = selectedDate ? tasks.filter(task => task.date === selectedDate) : tasks;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Personal Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          className: \"form-control\",\n          value: date,\n          onChange: e => setDate(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: day,\n          onChange: e => setDay(e.target.value),\n          placeholder: \"e.g., Monday\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: activity,\n          onChange: e => setActivity(e.target.value),\n          placeholder: \"e.g., Morning Run\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"form-control\",\n          value: status,\n          onChange: e => setStatus(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Not Done\",\n            children: \"Not Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Done\",\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary w-100\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label\",\n        children: \"Filter by Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        className: \"form-control\",\n        value: selectedDate,\n        onChange: e => setSelectedDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), filteredTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: filteredTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: task.activity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [task.day, \", \", task.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `badge ${task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"}`,\n            children: task.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-secondary me-2\",\n            onClick: () => handleToggleStatus(task.id),\n            children: \"Toggle Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-danger\",\n            onClick: () => handleDeleteTask(task.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: \"No tasks available for this date.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoList, \"X/H7XsYXxghOaA8IAiRm5vw6E+c=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ToDoList","_s","tasks","setTasks","date","setDate","day","setDay","activity","setActivity","status","setStatus","selectedDate","setSelectedDate","get","then","response","data","catch","error","console","handleAddTask","e","preventDefault","alert","newTask","id","Date","now","post","handleDeleteTask","delete","filter","task","handleToggleStatus","updatedTasks","map","updatedTask","find","put","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","length","onClick","_c","$RefreshReg$"],"sources":["/Users/macbookairm1/To-do-list/src/Components/ToDoList.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Button, Form, ListGroup, Modal } from \"react-bootstrap\";\n// import \"bootstrap/dist/css/bootstrap.min.css\"; // Correctly import the CSS\n\n// const App = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [task, setTask] = useState(\"\");\n//   const [editingTask, setEditingTask] = useState(null);\n\n//   // Fetch tasks from db.json\n//   useEffect(() => {\n//     axios.get(\"http://localhost:4000/tasks\").then((response) => {\n//       setTasks(response.data);\n//     });\n//   }, []);\n\n//   // Add a new task\n//   const handleAddTask = (e) => {\n//     e.preventDefault();\n//     if (task.trim() !== \"\") {\n//       const newTask = {\n//         id: Date.now(),\n//         text: task,\n//         date: new Date().toLocaleDateString(),\n//         time: new Date().toLocaleTimeString(),\n//       };\n\n//       axios.post(\"http://localhost:4000/tasks\", newTask).then(() => {\n//         setTasks([...tasks, newTask]);\n//         setTask(\"\");\n//       });\n//     }\n//   };\n\n//   // Delete a task\n//   const handleDelete = (id) => {\n//     axios.delete(`http://localhost:4000/tasks/${id}`).then(() => {\n//       setTasks(tasks.filter((task) => task.id !== id));\n//     });\n//   };\n\n//   // Open editing modal\n//   const handleEdit = (task) => {\n//     setEditingTask(task);\n//   };\n\n//   // Save the edited task\n//   const handleSaveEdit = () => {\n//     axios\n//       .put(`http://localhost:4000/tasks/${editingTask.id}`, editingTask)\n//       .then(() => {\n//         setTasks(\n//           tasks.map((task) =>\n//             task.id === editingTask.id ? editingTask : task\n//           )\n//         );\n//         setEditingTask(null);\n//       });\n//   };\n\n//   return (\n//     <div className=\"container mt-5\">\n//       <h1 className=\"text-center\">To-Do List</h1>\n\n//       {/* Add Task Form */}\n//       <Form onSubmit={handleAddTask} className=\"mb-4\">\n//         <Form.Group controlId=\"taskInput\">\n//           <Form.Control\n//             type=\"text\"\n//             placeholder=\"Enter a new task\"\n//             value={task}\n//             onChange={(e) => setTask(e.target.value)}\n//           />\n//         </Form.Group>\n//         <Button type=\"submit\" className=\"mt-2 w-100\" variant=\"primary\">\n//           Add Task\n//         </Button>\n//       </Form>\n\n//       {/* Task List */}\n//       <ListGroup>\n//         {tasks.map((task) => (\n//           <ListGroup.Item key={task.id} className=\"d-flex justify-content-between align-items-center\">\n//             <div>\n//               <strong>{task.text}</strong>\n//               <br />\n//               <small>\n//                 {task.date} - {task.time}\n//               </small>\n//             </div>\n//             <div>\n//               <Button\n//                 variant=\"warning\"\n//                 size=\"sm\"\n//                 className=\"me-2\"\n//                 onClick={() => handleEdit(task)}\n//               >\n//                 Edit\n//               </Button>\n//               <Button\n//                 variant=\"danger\"\n//                 size=\"sm\"\n//                 onClick={() => handleDelete(task.id)}\n//               >\n//                 Delete\n//               </Button>\n//             </div>\n//           </ListGroup.Item>\n//         ))}\n//       </ListGroup>\n\n//       {/* Edit Modal */}\n//       {editingTask && (\n//         <Modal show onHide={() => setEditingTask(null)}>\n//           <Modal.Header closeButton>\n//             <Modal.Title>Edit Task</Modal.Title>\n//           </Modal.Header>\n//           <Modal.Body>\n//             <Form.Group>\n//               <Form.Label>Task</Form.Label>\n//               <Form.Control\n//                 type=\"text\"\n//                 value={editingTask.text}\n//                 onChange={(e) =>\n//                   setEditingTask({ ...editingTask, text: e.target.value })\n//                 }\n//               />\n//             </Form.Group>\n//           </Modal.Body>\n//           <Modal.Footer>\n//             <Button variant=\"secondary\" onClick={() => setEditingTask(null)}>\n//               Cancel\n//             </Button>\n//             <Button variant=\"primary\" onClick={handleSaveEdit}>\n//               Save Changes\n//             </Button>\n//           </Modal.Footer>\n//         </Modal>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst ToDoList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [activity, setActivity] = useState(\"\");\n  const [status, setStatus] = useState(\"Not Done\");\n  const [selectedDate, setSelectedDate] = useState(\"\");\n\n  // Fetch tasks from JSON Server\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/tasks\")\n      .then((response) => setTasks(response.data))\n      .catch((error) => console.error(\"Error fetching tasks:\", error));\n  }, []);\n\n  // Add a new task\n  const handleAddTask = (e) => {\n    e.preventDefault();\n\n    if (!date || !day || !activity) {\n      alert(\"All fields are required!\");\n      return;\n    }\n\n    const newTask = {\n      id: Date.now(),\n      date,\n      day,\n      activity,\n      status,\n    };\n\n    axios\n      .post(\"http://localhost:4000/tasks\", newTask)\n      .then((response) => {\n        setTasks([...tasks, response.data]);\n        setDate(\"\");\n        setDay(\"\");\n        setActivity(\"\");\n        setStatus(\"Not Done\");\n      })\n      .catch((error) => console.error(\"Error adding task:\", error));\n  };\n\n  // Delete a task\n  const handleDeleteTask = (id) => {\n    axios\n      .delete(`http://localhost:4000/tasks/${id}`)\n      .then(() => {\n        setTasks(tasks.filter((task) => task.id !== id));\n      })\n      .catch((error) => console.error(\"Error deleting task:\", error));\n  };\n\n  // Toggle task status\n  const handleToggleStatus = (id) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === id ? { ...task, status: task.status === \"Done\" ? \"Not Done\" : \"Done\" } : task\n    );\n\n    const updatedTask = updatedTasks.find((task) => task.id === id);\n\n    axios\n      .put(`http://localhost:4000/tasks/${id}`, updatedTask)\n      .then(() => setTasks(updatedTasks))\n      .catch((error) => console.error(\"Error updating status:\", error));\n  };\n\n  // Filter tasks by selected date\n  const filteredTasks = selectedDate\n    ? tasks.filter((task) => task.date === selectedDate)\n    : tasks;\n\n  return (\n    <div className=\"container mt-5\">\n      <h1 className=\"text-center mb-4\">Personal Planner</h1>\n\n      {/* Add Task Form */}\n      <form onSubmit={handleAddTask} className=\"mb-4\">\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Date</label>\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Day</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={day}\n            onChange={(e) => setDay(e.target.value)}\n            placeholder=\"e.g., Monday\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Activity</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            value={activity}\n            onChange={(e) => setActivity(e.target.value)}\n            placeholder=\"e.g., Morning Run\"\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label className=\"form-label\">Status</label>\n          <select\n            className=\"form-control\"\n            value={status}\n            onChange={(e) => setStatus(e.target.value)}\n          >\n            <option value=\"Not Done\">Not Done</option>\n            <option value=\"Done\">Done</option>\n          </select>\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary w-100\">\n          Add Task\n        </button>\n      </form>\n\n      {/* Filter by Date */}\n      <div className=\"mb-4\">\n        <label className=\"form-label\">Filter by Date</label>\n        <input\n          type=\"date\"\n          className=\"form-control\"\n          value={selectedDate}\n          onChange={(e) => setSelectedDate(e.target.value)}\n        />\n      </div>\n\n      {/* Task List */}\n      <h3>Task List</h3>\n      {filteredTasks.length > 0 ? (\n        <ul className=\"list-group\">\n          {filteredTasks.map((task) => (\n            <li\n              key={task.id}\n              className=\"list-group-item d-flex justify-content-between align-items-center\"\n            >\n              <div>\n                <strong>{task.activity}</strong>\n                <br />\n                <small>\n                  {task.day}, {task.date}\n                </small>\n                <br />\n                <span\n                  className={`badge ${\n                    task.status === \"Done\" ? \"bg-success\" : \"bg-warning\"\n                  }`}\n                >\n                  {task.status}\n                </span>\n              </div>\n              <div>\n                <button\n                  className=\"btn btn-sm btn-secondary me-2\"\n                  onClick={() => handleToggleStatus(task.id)}\n                >\n                  Toggle Status\n                </button>\n                <button\n                  className=\"btn btn-sm btn-danger\"\n                  onClick={() => handleDeleteTask(task.id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"text-muted\">No tasks available for this date.</p>\n      )}\n    </div>\n  );\n};\n\nexport default ToDoList;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,UAAU,CAAC;EAChD,MAAM,CAACiB,YAAY,EAAEC,eAAe,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}